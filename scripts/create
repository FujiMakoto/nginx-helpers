#!/bin/bash
# ---------------------------------------------------------------------------
# create - Creates configuration and domain directories for a new virtual host

# Copyright (c) 2015, FujiMakoto <makoto@makoto.io>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated 
# documentation files (the "Software"), to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of 
# the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE 
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS 
# OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR 
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# Usage: create domain section

# Latest revision:
# 2015-12-26  Removing redundant output (v0.1)
# ---------------------------------------------------------------------------

set -e;

readonly NGINX_BASEDIR="/etc/nginx";
readonly HTTP_BASEDIR="/srv/http";
readonly DEFAULT_NGINX_USER="nginx";
readonly DEFAULT_FPM_USER="www-data";

readonly BOLD=$(tput bold)
readonly NORMAL=$(tput sgr0)

# Set arguments
DOMAIN=$1;
SECTION=$2;

if [ $# -ne 2 ]; then
	echo "Please provide the domain and section of the virtual host you wish to create";
	echo "(Example: /etc/nginx/scripts/create example.org root)";
	exit 1;
fi

# Check config paths
CONFIG_BASEDIR="${NGINX_BASEDIR}/sites-available/${DOMAIN}";
CONFIG_FILEPATH="${CONFIG_BASEDIR}/${SECTION}.conf";

if [ ! -d "${CONFIG_BASEDIR}" ]; then
	echo "Creating new virtual host directory: ${BOLD}${CONFIG_BASEDIR}${NORMAL}";
	mkdir "${CONFIG_BASEDIR}";
fi
chown "root:${NGINX_USER}" "${CONFIG_BASEDIR}" && chmod 0755 "${CONFIG_BASEDIR}";

if [ -e "${CONFIG_FILEPATH}" ]; then
	echo -e "\e[93mVirtual host already exists: ${BOLD}${CONFIG_FILEPATH}${NORMAL}\e[0m";
else
	touch "${CONFIG_FILEPATH}";
fi
chown "root:${NGINX_USER}" "${CONFIG_FILEPATH}" && chmod 0644 "${CONFIG_FILEPATH}";

# Check app paths
DOMAIN_BASEDIR="${HTTP_BASEDIR}/${DOMAIN}";
APP_BASEDIR="${DOMAIN_BASEDIR}/${SECTION}";
if [ ! -d "${DOMAIN_BASEDIR}" ]; then
	echo "Creating new domain directory: ${BOLD}${DOMAIN_BASEDIR}${NORMAL}";
	mkdir "${DOMAIN_BASEDIR}";
fi

if [ -e "${APP_BASEDIR}" ]; then
	echo -e "\e[93mVirtual host root directory already exists: ${BOLD}${APP_BASEDIR}${NORMAL}\e[0m";
	echo -e "\e[91mUnable to continue\e[0m";
	exit 1;
fi
mkdir "${APP_BASEDIR}";

# Logging
LOGS_PATH="${APP_BASEDIR}/logs";
mkdir "${LOGS_PATH}";
touch "${LOGS_PATH}/access.log.gz" "${LOGS_PATH}/error.log" "${LOGS_PATH}/php_error.log" "${LOGS_PATH}/php_slow.log";

# Web paths
PRIVATE_PATH="${APP_BASEDIR}/internal";
mkdir "${PRIVATE_PATH}";

PUBLIC_PATH="${APP_BASEDIR}/html";
mkdir "${PUBLIC_PATH}";

echo;
echo "------------------------------";
echo -e "Virtual host configuration: \e[94m${BOLD}${CONFIG_FILEPATH}${NORMAL}\e[0m";
echo;
echo -e "Application logs: \e[94m${BOLD}${LOGS_PATH}${NORMAL}\e[0m";
echo -e "Application internal: \e[94m${BOLD}${PRIVATE_PATH}${NORMAL}\e[0m";
echo -e "Application HTML: \e[94m${BOLD}${PUBLIC_PATH}${NORMAL}\e[0m";
echo;
